{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":3,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":3,"numTotalTests":3,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1568115462189,"success":true,"testResults":[{"console":null,"failureMessage":null,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1568115463012,"start":1568115462630},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/danny/code/elevation/tests/recursion-lesson-exercises-solutions/tests/exercises/ex-2.test.js","testResults":[{"ancestorTitles":["Exercise 2"],"duration":7,"failureMessages":[],"fullName":"Exercise 2 The function should receive a string and return the reverse of that string","location":null,"numPassingAsserts":0,"status":"passed","title":"The function should receive a string and return the reverse of that string"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":null,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1568115463071,"start":1568115463027},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/danny/code/elevation/tests/recursion-lesson-exercises-solutions/tests/exercises/ex-3.test.js","testResults":[{"ancestorTitles":["Exercise 3"],"duration":9,"failureMessages":[],"fullName":"Exercise 3 The function should recieve two arrays and transfer all the elements in the first array to the second array so that the second array retains the order from the first array","location":null,"numPassingAsserts":0,"status":"passed","title":"The function should recieve two arrays and transfer all the elements in the first array to the second array so that the second array retains the order from the first array"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":null,"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"perfStats":{"end":1568115463114,"start":1568115463075},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/danny/code/elevation/tests/recursion-lesson-exercises-solutions/tests/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["Exercise 1"],"duration":7,"failureMessages":[],"fullName":"Exercise 1 The function should return the factorial of the argument that has been passed to it","location":null,"numPassingAsserts":0,"status":"passed","title":"The function should return the factorial of the argument that has been passed to it"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}